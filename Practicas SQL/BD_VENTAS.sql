/*
	    INSTITUTO NACIONAL DE APRENDIJAZE 
		GESTION BASE DE DATOS 
		MARIEL ROJAS
		02/02/2023
*/


--CREA LA BASE DE DATOS
CREATE DATABASE VENTAS;
GO

-- SE USA LA BASE DE DATOS
 USE VENTAS;
 GO 

 CREATE TABLE PRODUCTOS (
 CODIGO_PRODUCTO int CONSTRAINT PK_PRODUCTOS PRIMARY KEY IDENTITY,
 NOMBRE_PRODUCTO varchar(20) NOT NULL,
 CANTIDAD_EXISTENTE int CONSTRAINT CK_CANTIDAD_EXIS	CHECK(CANTIDAD_EXISTENTE >= 0) NOT NULL,
 PRECIO_VENTA decimal(10,2) NOT NULL CONSTRAINT CK_PRECIO_VENTA CHECK(PRECIO_VENTA > 0)
 );

 CREATE TABLE ZONA_VENTAS (
 CODIGO_ZONA int CONSTRAINT PK_ZONA_VENTAS PRIMARY KEY IDENTITY,
 DESCRIPCION varchar(150) NOT NULL
 );

  CREATE TABLE CLIENTES(
 CODIGO_CLIENTE int CONSTRAINT PK_CLIENTES PRIMARY KEY IDENTITY,
 NOMBRE varchar(30) NOT NULL,
 TELEFONO varchar(10),
 DIRECCION varchar (50),
 CODIGO_ZONA int NOT NULL --FK
 );


 CREATE TABLE PEDIDOS (
 NUMERO_PEDIDO int CONSTRAINT PK_PEDIDOS PRIMARY KEY IDENTITY,
 CODIGO_CLIENTE int NOT NULL,
 CODIGO_PRODUCTO int NOT NULL,
 CANTIDAD_PEDIDO int CONSTRAINT CK_CANTIDAD_PEDIDO CHECK(CANTIDAD_PEDIDO > 0) NOT NULL,
 FECHA_PEDIDO date NOT NULL DEFAULT GETDATE(),
 OBSERVACIONES varchar(150) DEFAULT 'NO REGISTRA'
 );

 ----------------------------------------------------------------------------------
 --LAVES FORANEAS 

 -- TABLA PEDIDOS, CODIGO PRODUCTO
 ALTER TABLE PEDIDOS ADD CONSTRAINT FK_CODIGO_PRODUCTO
 FOREIGN KEY (CODIGO_PRODUCTO) REFERENCES PRODUCTOS(CODIGO_PRODUCTO)

  ALTER TABLE PEDIDOS ADD CONSTRAINT FK_CODIGO_CLIENTE
 FOREIGN KEY (CODIGO_CLIENTE) REFERENCES CLIENTES(CODIGO_CLIENTE)

 ALTER TABLE CLIENTES ADD CONSTRAINT FK_CODIGO_ZONA
 FOREIGN KEY (CODIGO_ZONA) REFERENCES ZONA_VENTAS(CODIGO_ZONA)


 ----------------------------------------------------------------------------------
  -- INSERTAR INFORMACION 

   INSERT INTO PRODUCTOS(NOMBRE_PRODUCTO,CANTIDAD_EXISTENTE,PRECIO_VENTA)
  VALUES  ('Arroz grano entero',80, 2300),
		  ('Frijoles rojos',60, 2500),
		  ('Harina de maiz',50, 1250),
		  ('Pasta dental',90, 3200),
		  ('Detergente en polvo',68, 3600),
		  ('Atun en lomos',98, 1750);

  INSERT INTO PEDIDOS(CODIGO_CLIENTE,CODIGO_PRODUCTO, CANTIDAD_PEDIDO,FECHA_PEDIDO)
  VALUES  (1,4,25,'20210727'),
		  (1,5,30,'20210728'),
		  (2,5,20,'20210729'),
		  (3,2,10,'20210730'),
		  (3,4,50,'20210731');

		  DELETE FROM PEDIDOS;

  INSERT INTO ZONA_VENTAS(DESCRIPCION)
  VALUES  ('PACIFICO CENTRAL'),
		  ('PACIFICO NORTE'),
		  ('PACIFICO SUR'),
		  ('VALLE CENTRAL'),
		  ('HUETAR NORTE'),
		  ('HUETAR ATLANTICO');

  INSERT INTO CLIENTES (NOMBRE,TELEFONO,DIRECCION,CODIGO_ZONA)
  VALUES  ('LA BODEGUITA',22222222, 'PALMAR NORTE',3),
		  ('SUPER PORVENIR',33333333, 'HEREDIA CENTRO',3),
		  ('ABASTECEDOR 3S',44444444, 'NARANJO',3),
		  ('SUPER LA ANGOSTURA',55555555, 'CHACARITA',3);


SELECT * FROM CLIENTES;
SELECT * FROM PEDIDOS;
SELECT * FROM ZONA_VENTAS;
SELECT * FROM PRODUCTOS;


 ----------------------------------------------------------------------------------
	-- CONSULTAR INFORMACION 

	--1)Muestre el nombre del cliente y el nombre de los productos pedidos
	SELECT NOMBRE AS NOMBRE_CLIENTE,NOMBRE_PRODUCTO 
	FROM CLIENTES C INNER JOIN PEDIDOS PE
	ON C.CODIGO_CLIENTE = PE.CODIGO_CLIENTE
	INNER JOIN PRODUCTOS PR
	ON PE.CODIGO_PRODUCTO = PR.CODIGO_PRODUCTO

	--2)Muestre el nombre y la cantidad de pedidos que ha realizado cada cliente.

	SELECT NOMBRE_PRODUCTO, CANTIDAD_PEDIDO, NOMBRE AS NOMBRE_CLIENTE 
	FROM CLIENTES C INNER JOIN PEDIDOS PE
	ON C.CODIGO_CLIENTE = PE.CODIGO_CLIENTE
	INNER JOIN PRODUCTOS PR
	ON PE.CODIGO_PRODUCTO = PR.CODIGO_PRODUCTO

	--3)Muestre el nombre y la cantidad de pedidos que ha realizado la bodeguita.

	SELECT NOMBRE_PRODUCTO, CANTIDAD_PEDIDO, NOMBRE AS NOMBRE_CLIENTE 
	FROM CLIENTES C INNER JOIN PEDIDOS PE
	ON C.CODIGO_CLIENTE = PE.CODIGO_CLIENTE
	INNER JOIN PRODUCTOS PR
	ON PE.CODIGO_PRODUCTO = PR.CODIGO_PRODUCTO
	WHERE NOMBRE = 'LA BODEGUITA'

	-- SUBCONSULTA
	SELECT NOMBRE,
			(SELECT COUNT(CANTIDAD_PEDIDO)
			FROM PEDIDOS
			WHERE CLIENTES.CODIGO_CLIENTE = PEDIDOS.CODIGO_CLIENTE ) AS NUMERO_PEDIDOS
	FROM CLIENTES
	WHERE NOMBRE = 'LA BODEGUITA'

	--4)Muestre el nombre de los productos que tienen un existencia menos a 70.
	SELECT NOMBRE_PRODUCTO, CANTIDAD_EXISTENTE
	FROM PRODUCTOS
	WHERE CANTIDAD_EXISTENTE < 70

	--5) Muestre las zonas y el nombre de los productos que ahí se venden
	SELECT DESCRIPCION AS ZONAS,NOMBRE_PRODUCTO
	FROM PEDIDOS P INNER JOIN CLIENTES C
	ON P.CODIGO_CLIENTE = C.CODIGO_CLIENTE
	INNER JOIN PRODUCTOS
	ON PRODUCTOS.CODIGO_PRODUCTO = P.CODIGO_PRODUCTO
	INNER JOIN ZONA_VENTAS
	ON ZONA_VENTAS.CODIGO_ZONA =C.CODIGO_ZONA

	--6) Muestre el nombre de los clientes que no han realizado pedidos.
	SELECT NOMBRE AS CLIENTES
	FROM PEDIDOS P RIGHT JOIN CLIENTES C
	ON P.CODIGO_CLIENTE = C.CODIGO_CLIENTE
	WHERE P.NUMERO_PEDIDO IS NULL

	SELECT * FROM CLIENTES;
	SELECT * FROM PEDIDOS;


	--7) Muestre los productos que no han sido pedidos
	SELECT NOMBRE_PRODUCTO,PEDIDOS.CODIGO_PRODUCTO
	FROM PRODUCTOS P LEFT JOIN PEDIDOS
	ON P.CODIGO_PRODUCTO = PEDIDOS.CODIGO_PRODUCTO
	WHERE PEDIDOS.CODIGO_PRODUCTO IS NULL

	SELECT * FROM PRODUCTOS;
	SELECT * FROM PEDIDOS;


	--8)Muestre los pedidos realizados entre el 29-Jul-21 al 30-Jul-21. 
    --Indique nombre del producto, nombre del cliente y la zona de venta
	SELECT NOMBRE_PRODUCTO, NOMBRE AS NOMBRE_CLIENTE, DESCRIPCION,FECHA_PEDIDO
	FROM PRODUCTOS INNER JOIN PEDIDOS
	ON PRODUCTOS.CODIGO_PRODUCTO = PEDIDOS.CODIGO_PRODUCTO
	INNER JOIN CLIENTES
	ON CLIENTES.CODIGO_CLIENTE = PEDIDOS.CODIGO_CLIENTE
	INNER JOIN ZONA_VENTAS
	ON ZONA_VENTAS.CODIGO_ZONA = CLIENTES.CODIGO_ZONA
	WHERE FECHA_PEDIDO = '20210729' OR FECHA_PEDIDO = '20210730'



	--Invente 5 consultas adicionales sobre esta BD que requiera utilizar consultas combinadas 
	-- (inner join, left join, right join)


	-- MUESTRE LA CANTIDAD DE PEDIDOS

	--Muestre el nombre de los clientes si que han realizado pedidos.
	SELECT NOMBRE AS CLIENTES
	FROM PEDIDOS P INNER JOIN CLIENTES C
	ON P.CODIGO_CLIENTE = C.CODIGO_CLIENTE
	WHERE P.CODIGO_CLIENTE IS NOT NULL

    -- Muestre la dirreccion, y el nombre de la zona de los clientes que no han realizado pedidos
	SELECT NOMBRE AS CLIENTES, DIRECCION, DESCRIPCION
	FROM PEDIDOS P RIGHT JOIN CLIENTES C
	ON P.CODIGO_CLIENTE = C.CODIGO_CLIENTE
	INNER JOIN ZONA_VENTAS
	ON ZONA_VENTAS.CODIGO_ZONA = C.CODIGO_ZONA
	WHERE P.CODIGO_CLIENTE IS NULL

	-- Muestre los productos que si han sido pedidos
	SELECT NOMBRE_PRODUCTO
	FROM PRODUCTOS P LEFT JOIN PEDIDOS
	ON P.CODIGO_PRODUCTO = PEDIDOS.CODIGO_PRODUCTO
	WHERE PEDIDOS.CODIGO_PRODUCTO IS NOT NULL

	SELECT NOMBRE_PRODUCTO
	FROM PRODUCTOS P INNER JOIN PEDIDOS
	ON P.CODIGO_PRODUCTO = PEDIDOS.CODIGO_PRODUCTO
	WHERE PEDIDOS.CODIGO_PRODUCTO IS NOT NULL

	SELECT NOMBRE_PRODUCTO
	FROM PRODUCTOS P RIGHT JOIN PEDIDOS
	ON P.CODIGO_PRODUCTO = PEDIDOS.CODIGO_PRODUCTO
	WHERE PEDIDOS.CODIGO_PRODUCTO IS NOT NULL

	-- 

